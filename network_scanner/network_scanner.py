import scapy.all as sc
import optparse
"""
def scan(ip):
	if ip==None:
		return
	sc.arping(ip)
scan("100.114.0.1/24")	
"""

def get_args():
	parser=optparse.OptionParser()
	parser.add_option("-t","--target",dest="target",help="Target IP Adderess")
	(option,args)=parser.parse_args()
	return option

def scan(ip):
	if ip==None:
		return 
	request_arp=sc.ARP(pdst=ip)
	print(request_arp.summary())
	#request_arp.show()
	#sc.ls(sc.ARP())
	request_broadcast=sc.Ether(dst="ff:ff:ff:ff:ff:ff")
	#sc.ls(sc.Ether())
	print(request_broadcast.summary())
	#request_broadcast.show()
	a_r_b=request_broadcast/request_arp
	print(a_r_b.summary())
	#a_r_b.show()
	#answered,unanswered=sc.srp(a_r_b,timeout=1)
	answered,unanswered=sc.srp(a_r_b,timeout=1,verbose=False)
	#print(answered.summary())
	#here answered and unanswered are list having 2 args
	print("********************************************")
	print(" ")
	print("Showing psrc value inbuilt")
	print(" ")
	for el in answered:
		print(el[1].show())
		print("********************************************")

	print(" ")
	print("mapped source and mac are->")
	print(" ")

	
	for el in answered:
		print("ip of source "+str(el[1].psrc))
		print("mac adderess of src "+str(el[1].hwsrc))
		print("  ")	

	#print("printing answers")
	print("IP\t\t\tMAC ADDERESS\n-----------------------------------------------")
	for el in answered:
		print(str(el[1].psrc)+"\t\t"+str(el[1].hwsrc))	

option=get_args()
ip=option.target

scan(ip)